{"version":3,"sources":["webpack:///webpack/bootstrap f577c8368d5574a267cd?7d79","webpack:///./db/init.js?a325","webpack:///external \"pg-promise\"?6c47","webpack:///./services/camelizeDbColumns.js?1dfb","webpack:///./components/courses/model/index.js?927b","webpack:///./components/users/model.js?9601","webpack:///./components/courses/model/ddelete.js?1b58","webpack:///./components/courses/model/insert.js?e09c","webpack:///./components/courses/model/select.js?2137","webpack:///./components/courses/model/update.js?09c4","webpack:///./model/select.js?a9a4","webpack:///./services/integerizeDbColumns.js?497c","webpack:///./db/seed.js"],"names":["pgPromise","camelizeColumns","data","template","prop","camel","utils","camelize","map","d","pgOptions","query","e","cyan","console","log","receive","getConnectionString","process","env","NODE_ENV","host","port","database","user","password","DATABASE_URL","pgPackage","default","db","connect","then","obj","done","catch","error","message","camelizeHashKeys","oldHash","newHash","undefined","Object","keys","forEach","key","camelizedKey","camelizeColumnsIn","aOld","asTitlesArray","aNew","includes","camelizeDbColumns","arrayOrHash","columnTitlesArray","Array","isArray","hash","select","insert","update","ddelete","oneByOauth","oauthProvider","oauthId","oneOrNone","toString","createFromGithub","profile","one","id","username","login","avatarUrl","avatar_url","destroyCourseWithProblems","courseId","none","create","course","userId","title","description","ifPublic","allCreated","allLearned","all","any","array","oneForActions","oneById","values","fetchCoursesAndTheirStats","where","integerizeColumnsIn","parseInt","integerizeDbColumns","Course","User","pgp","require"],"mappings":"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","file":"seed.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 40);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f577c8368d5574a267cd","import * as pgPromise from 'pg-promise';\n\n// for pgOptions\n/* eslint-disable */ // because it's taken from online source, may want to rewrite some time\nconst camelizeColumns = (data) => {\n  const template = data[0];\n  for (let prop in template) {\n    const camel = pgPromise.utils.camelize(prop);\n    if (!(camel in template)) {\n      data.map((d) => {\n        d[camel] = d[prop];\n        delete d[prop];\n      });\n    }\n  }\n};\n\nconst pgOptions = {\n  query: (e) => {\n    const cyan = \"\\x1b[36m%s\\x1b[0m\";\n    console.log(cyan, e.query); // log the query being executed\n  },\n  receive: (data) => {\n    camelizeColumns(data);\n  } // https://coderwall.com/p/irklcq\n};\n\nconst getConnectionString = () => {\n  switch (process.env.NODE_ENV) {\n    case 'development':\n      return {\n        host: 'localhost', // 'localhost' is the default;\n        port: 5432, // 5432 is the default;\n        database: 'memcode',\n        user: 'postgres',\n        password: '`1`1`1'\n      };\n    case 'test':\n      return {\n        host: 'localhost', // 'localhost' is the default;\n        port: 5432, // 5432 is the default;\n        database: 'memcode_test',\n        user: 'postgres',\n        password: '`1`1`1'\n      };\n    case 'production':\n      // this variable is set automatically after we do heroku addons:create heroku-postgresql:hobby-dev\n      return process.env.DATABASE_URL;\n  }\n};\n\nconst pgPackage = pgPromise.default(pgOptions);\nconst db = pgPackage(getConnectionString());\ndb.connect()\n  .then((obj) => {\n    obj.done(); // success, release the connection;\n  })\n  .catch((error) => {\n    console.log(\"ERROR:\", error.message || error);\n  });\n\nexport { db };\n\n\n\n// WEBPACK FOOTER //\n// ./db/init.js","module.exports = require(\"pg-promise\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"pg-promise\"\n// module id = 2\n// module chunks = 0 1","import { utils } from 'pg-promise';\n\nconst camelizeHashKeys = (oldHash) => {\n  const newHash = {};\n  if (oldHash === undefined || oldHash === null) return null;\n  Object.keys(oldHash).forEach((key) => {\n    const camelizedKey = utils.camelize(key);\n    newHash[camelizedKey] = oldHash[key];\n  });\n  return newHash;\n};\n\n// a{ courseUserIsLearning: b{ wow_yes: 1 }, amountOfProblems: 3 }\nconst camelizeColumnsIn = (aOld, asTitlesArray) => {\n  const aNew = {};\n\n  Object.keys(aOld).forEach((key) => {\n    asTitlesArray.includes(key) ?\n      aNew[key] = camelizeHashKeys(aOld[key]) :\n      aNew[key] = aOld[key];\n  });\n\n  return aNew;\n};\n\n// output of row_to_json doesn't get camelized, lets do it manually like so:\n// .then(array => camelizeDbColumns(array, ['course', 'courseUserIsLearning']))\n// http://stackoverflow.com/questions/33023469/node-postgres-and-getting-joined-fields-with-repeated-names\nconst camelizeDbColumns = (arrayOrHash, columnTitlesArray) => {\n  if (Array.isArray(arrayOrHash)) {\n    return arrayOrHash.map(hash =>\n      camelizeColumnsIn(hash, columnTitlesArray)\n    );\n  } else {\n    return camelizeColumnsIn(arrayOrHash, columnTitlesArray);\n  }\n};\n\nexport { camelizeDbColumns };\n\n\n\n// WEBPACK FOOTER //\n// ./services/camelizeDbColumns.js","// CREATE TABLE course (\n//   id SERIAL PRIMARY KEY,\n//   title VARCHAR NOT NULL,\n\n//   user_id INTEGER REFERENCES \"user\" (id) ON DELETE CASCADE NOT NULL\n// );\n\nimport { select } from './select';\nimport { insert } from './insert';\nimport { update } from './update';\nimport { ddelete } from './ddelete';\n\nexport { select, insert, update, ddelete };\n\n\n\n// WEBPACK FOOTER //\n// ./components/courses/model/index.js","import { db } from '~/db/init.js';\n\nconst select = {\n  // getUserByOauth('github', 7578559)\n  // => user\n  oneByOauth: (oauthProvider, oauthId) =>\n    db.oneOrNone(\n      'SELECT * FROM \"user\" where oauth_provider=${oauthProvider} and oauth_id=${oauthId}',\n      {\n        oauthProvider,\n        oauthId: oauthId.toString()\n      }\n    )\n};\n\nconst insert = {\n  createFromGithub: (profile) =>\n    db.one(\n      'INSERT INTO \"user\" (oauth_provider, oauth_id, username, avatar_url) VALUES (${oauthProvider}, ${oauthId}, ${username}, ${avatarUrl}) RETURNING *',\n      {\n        oauthProvider: 'github',\n        oauthId: profile.id.toString(),\n        username: profile.login,\n        avatarUrl: profile.avatar_url\n      }\n    )\n};\n\nexport { select, insert };\n\n\n\n// WEBPACK FOOTER //\n// ./components/users/model.js","import { db } from '~/db/init.js';\n\nconst ddelete = {\n  // will delete all problems of this course and all course_user_is_learning\n  destroyCourseWithProblems: (courseId) =>\n    db.none('DELETE FROM course WHERE id=${courseId}', { courseId })\n};\n\nexport { ddelete };\n\n\n\n// WEBPACK FOOTER //\n// ./components/courses/model/ddelete.js","import { db } from '~/db/init.js';\n\nconst insert = {\n  create: (course, userId) =>\n    db.one(\n      'INSERT INTO course (title, description, if_public, user_id) \\\n      VALUES (${title}, ${description}, ${ifPublic}, ${userId}) RETURNING *',\n      {\n        title: course.title,\n        description: course.description,\n        ifPublic: course.ifPublic,\n        userId\n      }\n    )\n};\n\nexport { insert };\n\n\n\n// WEBPACK FOOTER //\n// ./components/courses/model/insert.js","import { db } from '~/db/init.js';\nimport { camelizeDbColumns } from '~/services/camelizeDbColumns';\n\nimport { fetchCoursesAndTheirStats } from '~/model/select';\n\nconst select = {\n  allCreated: (userId) =>\n    fetchCoursesAndTheirStats(`WHERE course.user_id = \\${userId}`, userId),\n\n  // for /profile. returns all courses userId is currently learning.\n  // only active,\n  // filtered by amount of due problems (TODO)\n  allLearned: (userId) =>\n    fetchCoursesAndTheirStats(`WHERE course_user_is_learning.user_id = \\${userId} AND course_user_is_learning.active = true`, userId),\n\n  all: () =>\n    db.any(\n      `SELECT\n        row_to_json(course.*) AS course,\n        COUNT(problem.id)     AS amount_of_problems\n      FROM course\n      LEFT OUTER JOIN problem ON problem.course_id = course.id\n      WHERE if_public = true\n      GROUP BY course.id\n      `,\n    )\n      .then(array => camelizeDbColumns(array, ['course', 'courseUserIsLearning'])),\n\n  oneForActions: (id, userId) =>\n    fetchCoursesAndTheirStats(`WHERE course.id = ${id}`, userId)\n      .then((array) => array[0]),\n\n  oneById: (id) =>\n    db.one(\n      `\n      SELECT *\n      FROM course\n      WHERE course.id = \\${id}\n      `,\n      { id }\n    )\n};\n\nexport { select };\n\n\n\n// WEBPACK FOOTER //\n// ./components/courses/model/select.js","import { db } from '~/db/init.js';\n\nconst update = {\n  update: (id, values) =>\n    db.one(\n      `\n      UPDATE course\n      SET title = \\${title},\n          description = \\${description},\n          if_public = \\${ifPublic}\n      WHERE id = \\${id}\n      RETURNING *\n      `,\n      {\n        ...values,\n        id\n      }\n    )\n};\n\nexport { update };\n\n\n\n// WEBPACK FOOTER //\n// ./components/courses/model/update.js","import { db } from '~/db/init.js';\nimport { camelizeDbColumns } from '~/services/camelizeDbColumns';\nimport { integerizeDbColumns } from '~/services/integerizeDbColumns';\n\n// fetch course, courseUserAndLearning etc if it exists\n//\n// problemsToReview - later.\n//   basically problem_user_is_learning with nextDueDate < Time.now\n// problemsToLearn\n//   all problems of this course MINUS learned problem_user_is_learning of this course\n//\n// => [{\n//   course,\n//   courseUserIsLearning,\n//   amountOfProblemsToReview: 3,\n//   amountOfProblemsToLearn: 2,\n// }]\nconst fetchCoursesAndTheirStats = (where, userId) =>\n  db.any(\n    `SELECT\n      row_to_json(course.*)                  AS course,\n      row_to_json(course_user_is_learning.*) AS course_user_is_learning,\n      COUNT(distinct problem_user_is_learning.id) AS amount_of_problems_to_review,\n      (\n        (SELECT COUNT(problem.*) FROM problem WHERE problem.course_id = course.id) -\n        (SELECT COUNT(problem_user_is_learning.*) FROM problem_user_is_learning WHERE problem_user_is_learning.course_user_is_learning_id = course_user_is_learning.id)\n      )                                      AS amount_of_problems_to_learn,\n      COUNT(distinct problem.id)             AS amount_of_problems\n\n    FROM course\n\n    -- course_user_is_learning\n    LEFT OUTER JOIN course_user_is_learning\n      ON (\n        course_user_is_learning.course_id = course.id\n        AND\n        course_user_is_learning.user_id = \\${userId}\n      )\n\n    -- amount_of_problems_to_review\n    LEFT OUTER JOIN problem_user_is_learning\n      ON (\n        course_user_is_learning.id = problem_user_is_learning.course_user_is_learning_id\n        AND\n        problem_user_is_learning.next_due_date < timezone('UTC', now())\n      )\n\n    -- amount_of_problems\n    LEFT OUTER JOIN problem ON problem.course_id = course.id\n\n    ${where}\n\n    GROUP BY course_user_is_learning.id, course.id\n    `,\n    { userId }\n  )\n    .then(array => camelizeDbColumns(array, ['course', 'courseUserIsLearning']))\n    .then(array => integerizeDbColumns(array, ['amountOfProblemsToReview', 'amountOfProblemsToLearn', 'amountOfProblems']));\n\nexport { fetchCoursesAndTheirStats };\n\n\n\n// WEBPACK FOOTER //\n// ./model/select.js","// a{ courseUserIsLearning: b{ wow_yes: 1 }, amountOfProblems: 3 }\nconst integerizeColumnsIn = (aOld, asTitlesArray) => {\n  const aNew = {};\n\n  Object.keys(aOld).forEach((key) => {\n    asTitlesArray.includes(key) ?\n      aNew[key] = parseInt(aOld[key], 10) :\n      aNew[key] = aOld[key];\n  });\n\n  return aNew;\n};\n\n// https://github.com/vitaly-t/pg-promise/issues/118\n// COUNT(3) => to return js integer instead of string\nconst integerizeDbColumns = (arrayOrHash, columnTitlesArray) => {\n  if (Array.isArray(arrayOrHash)) {\n    return arrayOrHash.map(hash =>\n      integerizeColumnsIn(hash, columnTitlesArray)\n    );\n  } else {\n    return integerizeColumnsIn(arrayOrHash, columnTitlesArray);\n  }\n};\n\nexport { integerizeDbColumns };\n\n\n\n// WEBPACK FOOTER //\n// ./services/integerizeDbColumns.js","/* eslint-disable */\n\"use strict\";\n\nconst pgp = require('pg-promise');\nconst pgPackage = pgp({});\n\nimport * as Course from '~/components/courses/model';\nimport * as User from '~/components/users/model';\n\n\n// https://tylermcginnis.com/react-interview-questions/\n\n// There are a variety of file system methods, all contained in the fs module\n\n\n\n\n// ____Enzyme\n// shallow Shallow rendering is useful to constrain yourself to testing a component as a unit, and to ensure that your tests aren't indirectly asserting on behavior of child components.\n\n// mount Full DOM rendering is ideal for use cases where you have components that may interact with DOM APIs, or may require the full lifecycle in order to fully test the component (i.e., componentDidMount etc.)\n\n// Enzyme's render function is used to render react components to static HTML and analyze the resulting HTML structure.\n\n\n\n\n// async Essentially wraps the return value of the function in a promise\n\n\n\n\n\n// pg-promise transaction syntax\n// ```\n// return db.tx((transaction) => {\n//   const queries = [\n//     transaction.none('delete from courses where id=${course_Id}', { course_Id }),\n//     transaction.none('delete from problems where course_Id=${course_Id}', { course_Id })\n//   ];\n//   return transaction.batch(queries);\n// }).then(() => { return { data: 'deleted' }\n// }).catch((error) => { return { error } \n// })\n// ```\n\n// UPDATE problems SET title = ${title} WHERE id = ${id}\n\n\n\n// async await tutorial\n\n// event loop looks at the stack, and, if there is nothing left, pushes the first thing into it. \n\n\n\n\n// ES6\n\n// maps. are just like js objects, except everything can be a key.\n// let a = new Map();\n// a.set(1,'hi')\n// a.get(1) //=> 'hi'\n\n\n// let a = new Set();\n// a.add('hi')\n// a.has('hi') //=> true\n// a.add('hi') //=> nothing changes, set is nonrepeating.\n\n\n\n\n// javac is used for .java files into binary\n// eclipse uses javac behind the scenes to run the program\n// for every java class, you get one binary file.\n\n\n\n\n\n// ___WEBPACK\n// The url-loader works like the file-loader, but can return a Data URL if the file is smaller than a byte limit.\n\n// part of css-loader functionality is seeing background: url('../pics/hi.png')\n// this functionality can be turned off, but we may want to use it because eg image-loader allows us to compress images.\n\n\n\n// http://supermemopedia.com/wiki/We_should_have_two_independent_measures_of_difficulty!\n//\n// Human memory works to combat complex memories by means of forgetting, replacement connections, interference, abstraction, etc. As forgetting and interference target complex memories, Darwinian mechanisms favor simple abstractions that are cheap to maintain and serve more efficient computation. That aspect of forgetting underlies human intelligence and creativity!\n\n\n\n// WEBPACK FOOTER //\n// ./db/seed.js"],"sourceRoot":""}