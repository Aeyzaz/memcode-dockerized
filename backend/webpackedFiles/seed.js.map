{"version":3,"sources":["webpack:///webpack/bootstrap 739628366e8a6c91c489?d06b***","webpack:///./db/init.js?a325***","webpack:///./services/requireKeys.js?30f5***","webpack:///./components/users/model/index.js?a181***","webpack:///./components/courses/model/select/services/wherePublic.js?c3b6***","webpack:///./services/integerizeDbColumns.js?497c***","webpack:///./components/courses/model/ddelete.js?1b58***","webpack:///./components/courses/model/insert.js?e09c***","webpack:///./components/courses/model/select/index.js?8a07***","webpack:///./components/courses/model/select/services/getCoursesWithStats.js?8b73***","webpack:///./components/courses/model/update.js?09c4***","webpack:///./components/users/model/insert.js?4ca0***","webpack:///./components/users/model/select.js?6238***","webpack:///./components/users/model/update.js?7404***","webpack:///external \"pg-promise\"?6c47***","webpack:///./services/camelizeDbColumns.js?1dfb***","webpack:///./components/courses/model/index.js?927b***","webpack:///./db/seed.js"],"names":["pgPromise","camelizeColumns","data","template","prop","camel","utils","camelize","map","d","pgOptions","query","e","receive","noWarnings","process","env","NODE_ENV","getConnectionString","host","port","database","user","password","DATABASE_URL","pgPackage","default","db","connect","then","obj","done","catch","error","console","log","message","requireKeys","requiredKeys","functionBeingValidated","realArgs","forEach","key","undefined","Error","insert","select","update","wherePublic","integerizeColumnsIn","aOld","asTitlesArray","aNew","Object","keys","includes","parseInt","integerizeDbColumns","arrayOrHash","columnTitlesArray","Array","isArray","hash","ddelete","destroyCourseWithProblems","courseId","none","create","course","one","title","description","ifPublic","courseCategoryId","userId","allCreated","where","params","allLearned","orderBy","allPublic","sortBy","limit","offset","any","array","countAllPublic","result","amountOfPublicCourses","oneForActions","id","getCourseStats","oneById","search","searchString","getCoursesWithStats","values","createFrom","oauthProvider","oauthProfile","oauthId","toString","username","login","avatarUrl","avatar_url","email","name","picture","oneByOauth","oneOrNone","camelizeHashKeys","oldHash","newHash","camelizedKey","camelizeColumnsIn","camelizeDbColumns","Course","User","pgp","require"],"mappings":"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","file":"seed.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 75);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 739628366e8a6c91c489","import * as pgPromise from 'pg-promise';\n\n// for pgOptions\n/* eslint-disable */ // because it's taken from online source, may want to rewrite some time\nconst camelizeColumns = (data) => {\n  const template = data[0];\n  for (let prop in template) {\n    const camel = pgPromise.utils.camelize(prop);\n    if (!(camel in template)) {\n      data.map((d) => {\n        d[camel] = d[prop];\n        delete d[prop];\n      });\n    }\n  }\n};\n\nconst pgOptions = {\n  query: (e) => {\n    // const cyan = \"\\x1b[36m%s\\x1b[0m\";\n    // console.log(cyan, e.query); // log the query being executed\n  },\n  // https://coderwall.com/p/irklcq\n  receive: (data) => {\n    camelizeColumns(data);\n  },\n  // disable warnings for tests,\n  // because it was complaining a lot about duplicated connection\n  noWarnings: process.env.NODE_ENV === 'test'\n};\n\nconst getConnectionString = () => {\n  switch (process.env.NODE_ENV) {\n    // pgweb: postgres://postgres:§1§1§1@localhost:5432/memcode\n    case 'development':\n      return {\n        host: 'localhost', // 'localhost' is the default;\n        port: 5432, // 5432 is the default;\n        database: 'memcode',\n        user: process.env['DB_USER'],\n        password: process.env['DB_PASSWORD']\n      };\n    case 'test':\n      return {\n        host: 'localhost', // 'localhost' is the default;\n        port: 5432, // 5432 is the default;\n        database: 'memcode_test',\n        user: process.env['DB_USER'],\n        password: process.env['DB_PASSWORD']\n      };\n    case 'production':\n      // this variable is set automatically after we do heroku addons:create heroku-postgresql:hobby-dev\n      return process.env.DATABASE_URL;\n  }\n};\n\nconst pgPackage = pgPromise.default(pgOptions);\nconst db = pgPackage(getConnectionString());\ndb.connect()\n  .then((obj) => {\n    obj.done(); // success, release the connection;\n  })\n  .catch((error) => {\n    console.log(\"ERROR:\", error.message || error);\n  });\n\nexport { db };\n\n\n\n// WEBPACK FOOTER //\n// ./db/init.js","// const b = requireKeys(\n//   ['userId', 'title'], // what to validate\n//   (args) => {\n//     console.log('creating a comment with title=' + args.title);\n//   }\n// )\n\n// b({ userId: 'wow' })\nconst requireKeys = (requiredKeys, functionBeingValidated) =>\n  (realArgs) => {\n    requiredKeys.forEach((key) => {\n      if (realArgs[key] === undefined) {\n        throw new Error(`${key} is required in function, but is undefined`);\n      }\n    });\n\n    return functionBeingValidated(realArgs);\n  };\n\nexport { requireKeys };\n\n\n\n// WEBPACK FOOTER //\n// ./services/requireKeys.js","import { insert } from './insert';\nimport { update } from './update';\nimport { select } from './select';\n\nexport { insert, select, update };\n\n\n\n// WEBPACK FOOTER //\n// ./components/users/model/index.js","const wherePublic = `\n  course.if_public = true\n    AND\n  (\n    SELECT COUNT(problem.id) FROM problem WHERE problem.course_id = course.id\n  ) >= 2\n`;\n\nexport default wherePublic;\n\n\n\n// WEBPACK FOOTER //\n// ./components/courses/model/select/services/wherePublic.js","// a{ courseUserIsLearning: b{ wow_yes: 1 }, amountOfProblems: 3 }\nconst integerizeColumnsIn = (aOld, asTitlesArray) => {\n  const aNew = {};\n\n  Object.keys(aOld).forEach((key) => {\n    asTitlesArray.includes(key) ?\n      aNew[key] = parseInt(aOld[key], 10) :\n      aNew[key] = aOld[key];\n  });\n\n  return aNew;\n};\n\n// https://github.com/vitaly-t/pg-promise/issues/118\n// COUNT(3) => to return js integer instead of string\nconst integerizeDbColumns = (arrayOrHash, columnTitlesArray) => {\n  if (Array.isArray(arrayOrHash)) {\n    return arrayOrHash.map(hash =>\n      integerizeColumnsIn(hash, columnTitlesArray)\n    );\n  } else {\n    return integerizeColumnsIn(arrayOrHash, columnTitlesArray);\n  }\n};\n\nexport { integerizeDbColumns };\n\n\n\n// WEBPACK FOOTER //\n// ./services/integerizeDbColumns.js","import { db } from '~/db/init.js';\n\nconst ddelete = {\n  // will delete all problems of this course and all course_user_is_learning\n  destroyCourseWithProblems: (courseId) =>\n    db.none('DELETE FROM course WHERE id=${courseId}', { courseId })\n};\n\nexport { ddelete };\n\n\n\n// WEBPACK FOOTER //\n// ./components/courses/model/ddelete.js","import { db } from '~/db/init.js';\n\nconst insert = {\n  create: (course) =>\n    db.one(\n      \"INSERT INTO course (title, description, if_public, course_category_id, user_id, created_at) \\\n      VALUES (${title}, ${description}, ${ifPublic}, ${courseCategoryId}, ${userId}, timezone('UTC', now())) RETURNING *\",\n      {\n        title: course.title,\n        description: course.description,\n        ifPublic: course.ifPublic,\n        courseCategoryId: course.courseCategoryId || null,\n        userId: course.userId\n      }\n    )\n};\n\nexport { insert };\n\n\n\n// WEBPACK FOOTER //\n// ./components/courses/model/insert.js","import { db } from '~/db/init.js';\nimport { camelizeDbColumns } from '~/services/camelizeDbColumns';\nimport wherePublic from './services/wherePublic';\nimport getCoursesWithStats from './services/getCoursesWithStats';\n\nconst select = {\n  allCreated: (userId) =>\n    getCoursesWithStats({\n      where: `WHERE course.user_id = \\${userId}`,\n      params: { userId }\n    }),\n\n  // for /profile. returns all courses userId is currently learning.\n  // only active,\n  // filtered by amount of due problems (TODO)\n  allLearned: (userId) =>\n    getCoursesWithStats({\n      where: ` WHERE course_user_is_learning.user_id = \\${userId} AND course_user_is_learning.active = true`,\n      orderBy: `\n        ORDER BY\n          amount_of_problems_to_review DESC,\n          amount_of_problems_to_learn DESC,\n          next_due_date_in ASC\n      `,\n      params: { userId }\n    }),\n\n  // all public courses with 2 or more problems,\n  // sorted by amount of learners\n  // @sortBy = ['popular', 'new']\n  allPublic: ({ sortBy, limit, offset, courseCategoryId }) =>\n    db.any(\n      `\n      SELECT\n        row_to_json(course.*) AS course,\n        COUNT(distinct course_user_is_learning.user_id) AS amount_of_users_learning_this_course,\n        COUNT(distinct problem.id) AS amount_of_problems\n      FROM course\n      LEFT OUTER JOIN course_user_is_learning\n        ON (\n          course_user_is_learning.active = true\n          AND\n          course.id = course_user_is_learning.course_id\n        )\n      INNER JOIN problem\n        ON problem.course_id = course.id\n      WHERE\n        ${wherePublic}\n        ${courseCategoryId ? `AND course.course_category_id = ${courseCategoryId}` : ''}\n      GROUP BY course.id\n      ${\n        sortBy === 'popular' ?\n          `\n          ORDER BY\n            amount_of_users_learning_this_course DESC,\n            amount_of_problems DESC\n          ` :\n          `ORDER BY course.created_at DESC`\n      }\n      LIMIT ${limit}\n      OFFSET ${offset}\n      `\n    )\n      .then((array) => camelizeDbColumns(array, ['course'])),\n\n  countAllPublic: ({ courseCategoryId }) =>\n    db.one(\n      `\n      SELECT\n        COUNT(course.id) as amount_of_public_courses\n      FROM course\n      WHERE\n        ${wherePublic}\n        ${courseCategoryId ? `AND course.course_category_id = ${courseCategoryId}` : ''}\n      `\n    )\n      .then((result) => result.amountOfPublicCourses),\n\n  oneForActions: (id, userId) =>\n    getCoursesWithStats({\n      where: 'WHERE course.id = ${courseId}',\n      params: { userId, courseId: id }\n    })\n      .then((array) => array[0]),\n\n  getCourseStats: (id) =>\n    db.one(\n      `\n      SELECT\n        COUNT(distinct course_user_is_learning.user_id) AS amount_of_users_learning_this_course,\n        COUNT(distinct problem.id) AS amount_of_problems\n      FROM course\n      LEFT JOIN course_user_is_learning\n        ON (\n          course_user_is_learning.active = true\n          AND\n          course.id = course_user_is_learning.course_id\n        )\n      LEFT JOIN problem\n        ON problem.course_id = course.id\n      WHERE course.id = \\${id}\n      GROUP BY course.id\n      `,\n      { id }\n    ),\n\n  oneById: (id) =>\n    db.one(\n      `\n      SELECT *\n      FROM course\n      WHERE course.id = \\${id}\n      `,\n      { id }\n    ),\n\n  search: (userId, searchString) =>\n    getCoursesWithStats({\n      where: `\n        WHERE\n          (\n            course.title ILIKE \\${searchString} OR\n            course.description ILIKE \\${searchString}\n          )\n            AND\n          ( -- either public or created by me\n            course.user_id = \\${userId} OR\n            ${wherePublic}\n          )\n      `,\n      orderBy: `\n        ORDER BY\n          -- if matches by description instead of by title - place last\n          CASE\n            WHEN course.title ILIKE \\${searchString}\n            THEN 1 ELSE 0\n          END DESC,\n          CASE\n            WHEN course_user_is_learning.active = true\n            THEN 1 ELSE 0\n          END DESC,\n          CASE\n            WHEN course_user_is_learning.user_id = \\${userId}\n            THEN 1 ELSE 0\n          END DESC,\n          CASE\n            WHEN course.user_id = \\${userId}\n            THEN 1 ELSE 0\n          END DESC,\n          amount_of_problems_to_review DESC,\n          amount_of_problems_to_learn DESC,\n          next_due_date_in ASC\n        LIMIT 10\n      `,\n      params: { userId, searchString: `%${searchString}%` }\n    }),\n};\n\nexport { select };\n\n\n\n// WEBPACK FOOTER //\n// ./components/courses/model/select/index.js","import { db } from '~/db/init.js';\nimport { integerizeDbColumns } from '~/services/integerizeDbColumns';\nimport { camelizeDbColumns } from '~/services/camelizeDbColumns';\n\n// fetch course, courseUserAndLearning etc if it exists\n//\n// problemsToReview - later.\n//   basically problem_user_is_learning with nextDueDate < Time.now\n// problemsToLearn\n//   all problems of this course MINUS learned problem_user_is_learning of this course\n//\n// => [{\n//   course,\n//   courseUserIsLearning,\n//   amountOfProblemsToReview: 3,\n//   amountOfProblemsToLearn: 2,\n// }]\nconst getCoursesWithStats = ({ where = '', orderBy = '', params = {} } = {}) =>\n  db.any(\n    `SELECT\n      row_to_json(course.*)                  AS course,\n      row_to_json(course_user_is_learning.*) AS course_user_is_learning,\n      COUNT(distinct problem_user_is_learning.id) AS amount_of_problems_to_review,\n      (\n        (SELECT COUNT(problem.*) FROM problem WHERE problem.course_id = course.id) -\n        (SELECT COUNT(problem_user_is_learning.*) FROM problem_user_is_learning WHERE problem_user_is_learning.course_user_is_learning_id = course_user_is_learning.id)\n      )                                      AS amount_of_problems_to_learn,\n      COUNT(distinct problem.id)             AS amount_of_problems,\n      (\n        (\n          SELECT MIN(problem_user_is_learning.next_due_date)\n          FROM problem_user_is_learning\n          WHERE\n            (\n              problem_user_is_learning.course_user_is_learning_id = course_user_is_learning.id\n                AND\n              problem_user_is_learning.if_ignored = false\n            )\n        )\n          -\n        timezone('UTC', now())\n      )                                      AS next_due_date_in\n\n    FROM course\n\n    -- course_user_is_learning\n    LEFT OUTER JOIN course_user_is_learning\n      ON (\n        course_user_is_learning.course_id = course.id\n        AND\n        course_user_is_learning.user_id = \\${userId}\n      )\n\n    -- amount_of_problems_to_review\n    LEFT OUTER JOIN problem_user_is_learning\n      ON (\n        course_user_is_learning.id = problem_user_is_learning.course_user_is_learning_id\n        AND\n        problem_user_is_learning.next_due_date < timezone('UTC', now())\n        AND\n        problem_user_is_learning.if_ignored = false\n      )\n\n    -- amount_of_problems\n    LEFT OUTER JOIN problem ON problem.course_id = course.id\n\n    ${where}\n\n    GROUP BY course_user_is_learning.id, course.id\n\n    ${orderBy}\n    `,\n    params\n  )\n    .then((array) => camelizeDbColumns(array, ['course', 'courseUserIsLearning']))\n    .then((array) => integerizeDbColumns(array, ['amountOfProblemsToReview', 'amountOfProblemsToLearn', 'amountOfProblems']));\n\nexport default getCoursesWithStats;\n\n\n\n// WEBPACK FOOTER //\n// ./components/courses/model/select/services/getCoursesWithStats.js","import { db } from '~/db/init.js';\n\nconst update = {\n  update: (id, values) =>\n    db.one(\n      `\n      UPDATE course\n      SET\n        title = \\${title},\n        description = \\${description},\n        if_public = \\${ifPublic},\n        course_category_id = \\${courseCategoryId}\n      WHERE id = \\${id}\n      RETURNING *\n      `,\n      {\n        ...values,\n        id\n      }\n    )\n};\n\nexport { update };\n\n\n\n// WEBPACK FOOTER //\n// ./components/courses/model/update.js","import { db } from '~/db/init.js';\nimport { requireKeys } from '~/services/requireKeys';\n\nconst insert = {\n  createFrom: (oauthProvider, oauthProfile) => {\n    switch (oauthProvider) {\n      case 'github':\n        return insert.create({\n          oauthProvider: 'github',\n          oauthId: oauthProfile.id.toString(),\n          username: oauthProfile.login,\n          avatarUrl: oauthProfile.avatar_url,\n          email: oauthProfile.email\n        });\n      case 'google':\n        return insert.create({\n          oauthProvider: 'google',\n          oauthId: oauthProfile.id.toString(),\n          username: oauthProfile.name,\n          avatarUrl: oauthProfile.picture,\n          email: oauthProfile.email\n        });\n      default:\n        throw new Error(`No such oauthProvider as '${oauthProvider}'.`);\n    }\n  },\n\n  create: requireKeys(['oauthProvider', 'oauthId', 'username', 'avatarUrl', 'email'],\n    (user) =>\n      db.one(\n        `\n        INSERT INTO \"user\"\n          (\n            oauth_provider, oauth_id,\n            username, avatar_url, email,\n            created_at\n          )\n        VALUES\n          (\n            \\${oauthProvider}, \\${oauthId},\n            \\${username}, \\${avatarUrl}, \\${email},\n            timezone('UTC', now())\n          )\n        RETURNING *\n        `,\n        {\n          oauthProvider: user.oauthProvider,\n          oauthId: user.oauthId,\n          username: user.username,\n          avatarUrl: user.avatarUrl,\n          email: user.email\n        }\n      )\n  )\n};\n\nexport { insert };\n\n\n\n// WEBPACK FOOTER //\n// ./components/users/model/insert.js","import { db } from '~/db/init.js';\n\nconst select = {\n  // getUserByOauth('github', 7578559)\n  // => user\n  oneByOauth: (oauthProvider, oauthId) =>\n    db.oneOrNone(\n      'SELECT * FROM \"user\" WHERE oauth_provider=${oauthProvider} and oauth_id=${oauthId}',\n      {\n        oauthProvider,\n        oauthId: oauthId.toString()\n      }\n    ),\n\n  one: (id) =>\n    db.one(\n      `SELECT * FROM \"user\" WHERE id = \\${id}`,\n      { id }\n    )\n};\n\nexport { select };\n\n\n\n// WEBPACK FOOTER //\n// ./components/users/model/select.js","import { db } from '~/db/init.js';\n\nconst update = {\n  update: (id, email) =>\n    db.one(\n      `\n        UPDATE \"user\"\n        SET email = \\${email}\n        WHERE id = \\${id}\n        RETURNING *\n      `,\n      { id, email }\n    )\n};\n\nexport { update };\n\n\n\n// WEBPACK FOOTER //\n// ./components/users/model/update.js","module.exports = require(\"pg-promise\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"pg-promise\"\n// module id = 4\n// module chunks = 0 1 2 3 4","import { utils } from 'pg-promise';\n\nconst camelizeHashKeys = (oldHash) => {\n  const newHash = {};\n  if (oldHash === undefined || oldHash === null) return null;\n  Object.keys(oldHash).forEach((key) => {\n    const camelizedKey = utils.camelize(key);\n    newHash[camelizedKey] = oldHash[key];\n  });\n  return newHash;\n};\n\n// a{ courseUserIsLearning: b{ wow_yes: 1 }, amountOfProblems: 3 }\nconst camelizeColumnsIn = (aOld, asTitlesArray) => {\n  const aNew = {};\n\n  Object.keys(aOld).forEach((key) => {\n    asTitlesArray.includes(key) ?\n      aNew[key] = camelizeHashKeys(aOld[key]) :\n      aNew[key] = aOld[key];\n  });\n\n  return aNew;\n};\n\n// output of row_to_json doesn't get camelized, lets do it manually like so:\n// .then(array => camelizeDbColumns(array, ['course', 'courseUserIsLearning']))\n// http://stackoverflow.com/questions/33023469/node-postgres-and-getting-joined-fields-with-repeated-names\nconst camelizeDbColumns = (arrayOrHash, columnTitlesArray) => {\n  if (Array.isArray(arrayOrHash)) {\n    return arrayOrHash.map(hash =>\n      camelizeColumnsIn(hash, columnTitlesArray)\n    );\n  } else {\n    return camelizeColumnsIn(arrayOrHash, columnTitlesArray);\n  }\n};\n\nexport { camelizeDbColumns };\n\n\n\n// WEBPACK FOOTER //\n// ./services/camelizeDbColumns.js","// CREATE TABLE course (\n//   id SERIAL PRIMARY KEY,\n//   title VARCHAR NOT NULL,\n\n//   user_id INTEGER REFERENCES \"user\" (id) ON DELETE CASCADE NOT NULL\n// );\n\nimport { select } from './select';\nimport { insert } from './insert';\nimport { update } from './update';\nimport { ddelete } from './ddelete';\n\nexport { select, insert, update, ddelete };\n\n\n\n// WEBPACK FOOTER //\n// ./components/courses/model/index.js","/* eslint-disable */\n\"use strict\";\n\nconst pgp = require('pg-promise');\nconst pgPackage = pgp({});\n\nimport * as Course from '~/components/courses/model';\nimport * as User from '~/components/users/model';\n\n// ____Enzyme\n// shallow Shallow rendering is useful to constrain yourself to testing a component as a unit, and to ensure that your tests aren't indirectly asserting on behavior of child components.\n\n// mount Full DOM rendering is ideal for use cases where you have components that may interact with DOM APIs, or may require the full lifecycle in order to fully test the component (i.e., componentDidMount etc.)\n\n// Enzyme's render function is used to render react components to static HTML and analyze the resulting HTML structure.\n\n\n\n// WEBPACK FOOTER //\n// ./db/seed.js"],"sourceRoot":""}